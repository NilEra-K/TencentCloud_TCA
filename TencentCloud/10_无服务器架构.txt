Chapter1 无服务器架构介绍
	1.1 无服务器架构的诞生背景
		计算资源的去服务器化:

		| Bare Metal
		|--- 物理机托管{无需关心机房运维; 无人工值守; 开发(天)/部署(小时)}
		|
		| IAAS
		|--- 云主机{无须关心物理服务器; 服务器调度自动化; 开发(天)/部署(分钟)}
		|
		| PAAS
		|--- 容器{无须关心服务部署; 标准持续集成; 开发(天)/部署(秒)}
		|
		| FAAS
		|--- 云函数{无须关心服务运维; 计算服务化; 开发(分钟)/部署(毫秒}
		|
		|
		↓
		降低开发运维负担, 更聚焦业务创新, 解放生产力
		
		单体架构-->S O A -->微服务-->无服务器
		物 理 机-->虚拟机-->容  器-->云 函 数
		
		- 应用微服务化后依然存在的问题
		  · 资源的最小粒度是容器, 是否可以更小
		  · 应用以服务为粒度, 是否可以更细
		  · 是否可以不考虑Runtime
		  · 是否可以不关心计算资源的管理
		
	1.2 无服务器架构简介
		无服务器是一种架构理念, 其核心思想是将提供服务资源的基础设施抽象成各种服务, 
		以API接口的方式供给用户按需调用, 真正做到按需伸缩按使用收费.
		
Chapter2 腾讯云SCF介绍
	2.1 SCF简介
		- 无服务器云函数(Serverless Cloud Function, SCF)是腾讯云为企业和开发者们提供的
		  无服务器执行环境, 帮助用户在无需购买和管理服务器的情况下运行代码.
		
		- SCF特点:
		  · 简单易用
		  · 高效
		  · 稳定可靠
		  · 简化管理
		  · 降低开销
		
		- SCF产品功能
		  · 代码托管: 代码被安全地托管在SCF平台上, 阻断外部入侵
		  · 触发器管理: 支持云平台产品的事件触发, 作为各个云产品的"粘合剂"
		  · 自动伸缩: 根据请求量自动扩缩容, 免除任何手动配置
		  · 完备的日志能力: 支持从触发到达的全阶段日志展示, 满足用户全方位调试和排障需求
		  · 多维度监控和告警: 除默认提供的监控指标外, 用户还可以使用自定义指标保持对业务的关注
		  · 持续集成和持续部署: 支持代码仓库的自动同步和自动部署, 支持代码版本部署, 回滚
		
	2.2 SCF优势
		传统开发模式{
			架构设计: 架构分层, 功能划分, 模块通信, 并发容灾, 安全, 成本设计...;
			代码开发: 网络服务开发, 业务逻辑开发, 容灾/并发/扩缩容等非功能性需求开发;
			代码调试: 登陆服务器使用熟悉的工具本地调试;
			发布部署: 传统软件分发, 或使用容器标准化部署多版本管理, 热升级实现较为困难;
			服务运维: 服务器运维负担重, 业务扩缩容, 故障处理等成本较高, 耗时长;
			服务成本: 按使用时间付费, 至少保留1台服务器;
		}
		SCF 开发模式{
			架构设计: 函数功能划分, 函数调用流程/组合事件触发关系定义等;								收益或不足: 明显降低架构设计的工作量, 上述例子降低90%以上;
			代码开发: 针对事件的处理函数开发; 															收益或不足: 明显降低代码开发工作量, 上述例子降低90%以上;
			代码调试: 主要依赖日志调试; 																收益或不足: 代码调试体验暂不如传统开发模式;
			发布部署: 通过API或页面一键部署, 支持函数多版本, 可通过别名选择正式环境版本, 支持热升级; 	收益或不足: 明显提升发布部署效率, 减少发布部署对业务的影响;
			服务运维: 依据负载自动扩缩容, 故障自愈; 													收益或不足: 免去服务器运维, 免去扩缩容/故障处理工作量, 减少对业务的影响;
			服务成本: 按照实际使用付费, 无须保留服务器; 												收益或不足: 彻底的按需付费, 无闲置成本;
		}
		- SCF开发优势
		  · 无穷弹性计算能力: 根据请求自动平行调整服务资源, 拥有近乎无限的扩容能力.
		  · 聚焦代码逻辑: 开发者只关心最核心的代码片段, 跳过复杂的, 繁琐的其他工作.
		  · 自动触发: 完全由事件触发(event-trigger), 空闲时没有资源在运行. 
		  · 零运维: 不再需要管理底层计算资源的服务器. 
					同样的, 这意味着用户也无法登录服务器. 当然, 也不需要去优化服务器.
		  · 秒级部署: 运行无状态, 轻易实现快速迭代, 极速部署.

	2.3 SCF应用场景
		- 实时文件处理
		- 数据ETL处理
		- 移动及Web应用后端
		- AI推理预测
		- 小程序云开发
		
	2.4 第一个SCF函数
		创建云函数-->配置云函数-->调用云函数, 并观察函数运行结果
