Chapter1 本地应用迁移上云
	1.1 本地应用上云基础
		1.1.1 本地应用上云的优势
			- 降低投入成本
			  · 降低硬件采购费用
			  · 提高了资源利用率
			  · 终端用电功率小
			  · 减少存储空间的要求
			- 节约运营成本
			  · 减少故障率
			  · 提升工作效率
			  · 提高SLA
			  · 减少桌面运维成本
			- 提升业务水平
			  · 减少宕机
			  · 数据自动备份
			  · 应用快速安装
			  · 业务连续性和容灾
			- 使用灵活方便
			  · 快速灵活部署IT资源
			  · 灵活拓展和释放IT资源
			  · 随时随地接入办公
		1.1.2 本地应用上云的基本步骤
			本地应用上云的迁移步骤:
																				+----------------+
																	 |--------> | 本 地 数 据 库 |
								   *************************         |			+----------------+
			+----------+		   * 本地服务器			   *         |
			| 客 户 端 | --------> * +------------------+  * --------|
			+----------+           * | 传统应用(前后端) |  *         |
								   * +------------------+  *         |			+----------------+
								   *************************         |--------> |  本 地  存 储  |
																				+----------------+
																				
			1) 迁移到云服务器
			2) 迁移到云服务器安装数据库
			3) 迁移到云存储
			这三条没有明确的先后顺序.
			
	1.2 应用迁移上云场景介绍
		应用场景(基础架构如下图):
		- 以一个简单的图书管理系统为例, 演示应用的迁移上云
		- 随着业务的发展, 为了云计算资源节约成本, 提高灵活度, 决定把图书管理系统迁移上云,
		  从而更好的支撑业务发展
																				+-----------------+
																	 |--------> | 本地数据库MySQL |
								   *************************         |			+-----------------+
			+----------+		   * 本地服务器			   *         |
			| 客 户 端 | --------> * +------------------+  * --------|
			+----------+           * |  图书 管理 系统  |  *         |
								   * +------------------+  *         |			+-------------------+
								   *************************         |--------> | 本地存储(保存图片)|
																				+-------------------+

		1.2.1 应用迁移方案
			- 云服务器一台, 数据盘60G以上
			  · 安装MySQL数据库
			  · 云数据盘用于保存MySQL数据
			- 云服务器一台
			  · 部署环境(Tomcat)以及应用
			  · 保存图片资源																云服务器
																	  保存图书信息			+-----------------+
																	 |--------------------> | 本地数据库MySQL |
								   *************************         |						+-----------------+
			+----------+		   * 云服务器			   *         |
			| 用    户 | --------> * +------------------+  * --------|
			+----------+           * |  图书 管理 系统  |  *         |
								   * +------------------+  *         |					    +-------------------+
								   *************************         |--------------------> | 云硬盘 (保存图片) |
																	  保存图片信息		    +-------------------+
			  

	1.3 云服务器简介
		('=' 没有独享物理资源 '+'独享物理资源)
		_
		|------------= 云服务器CVM				通用性场景, 专业性能场景...
		|------------= GPU云服务器			深度学习, 科学计算, 视频编解码...
		|------------= FPGA云服务器			深度学习, 实时图像压缩...
		|
		|------------+ 专用宿主机CDH			金融业务场景, 高性能业务场景...
		|------------+ 黑石物理服务器CPM		大数据, 虚拟化, 游戏...
		-
		
		1.3.1 云服务器CVM
			云服务器CVM(Cloud Virtual Machine)是一种弹性可伸缩的计算服务.
			+------------+-------------------------------+-------------------------------+
			|            |          云服务器CVM          |           传统服务器          |
			+------------+-------------------------------+-------------------------------+
			| 资源灵活度 |           弹性 计算           |      资 源 短 缺 或 闲 置     |
			+------------+-------------------------------+-------------------------------+
			| 配置灵活度 | CPU, 内存, 硬盘和带宽灵活配置 |           固定 配置           |
			+------------+-------------------------------+-------------------------------+
			| 稳定与容灾 |           稳定 可靠           |    手工容灾, 数据安全不可控   |
			+------------+-------------------------------+-------------------------------+
			| 管理  方式 |           简单 易用           |      自行装机, 扩展硬件       |
			+------------+-------------------------------+-------------------------------+
			| 访问  控制 |           安全 网络           |   难以实现精细化的网络策略    |
			+------------+-------------------------------+-------------------------------+
			| 安全  防护 |           全面 防护           |      额外购买安全防护服务     |
			+------------+-------------------------------+-------------------------------+
			| 成      本 |           计费 灵活           |   租用费用昂贵, 运维成本高    |
			+------------+-------------------------------+-------------------------------+

		1.3.2 云服务器CVM概念关系
			************************
			*	镜像↘			   *
			*		 实例 →快照    *	
			*	存储↗			   *
			************************
			
			镜像: 镜像提供实例的操作系统, 初始化应用数据及预装的软件.
				  操作系统支持多种Linux发行版本和不同的Windows版本. 
				  阿里云服务器镜像分为公共镜像, 自定义镜像, 共享镜像和镜像市场.
			
			存储: 顾名思义

			实例: 实例等同于一台虚拟服务器, 内含CPU, 内存, 操作系统, 网络配置, 
				  磁盘等基础的计算组件.

			快照: 快照是指云服务器在某一时间点一块云盘的数据状态文件.
				  常用于数据备份, 数据恢复和制作自定义镜像等.
			
		1.3.3 云服务器存储概述
			存储介质: 普通硬盘, SSD硬盘
			使用场景: 系统盘, 数据盘
			架构模式: 云硬盘, 本地盘, 对象存储
			
		1.3.4 块存储设备映射
			块存储设备映射:
			+--------------------------+
			|						   |
			|	+------------------+   |
			|	|				   |   |
			|	|	############   |   |
			|	|	# /dev/vda #---+---+-----> 系统盘:云硬盘disk0
			|	|	############   |   |
			|	|				   |   |
			|	|	############   |   |
			|	|	# /dev/vdb #---+---+-----> 系统盘:云硬盘disk1
			|	|	############   |   |
			|	|                  |   |
			|	|	############   |   |
			|	|	# /dev/vdc #---+---+-----> 系统盘:云硬盘disk2
			|	|	############   |   |
			|	|				   |   |
			|	+------------------+   |
			|						   |
			+--------------------------+
		
		1.3.5 API概览
			地域相关接口: 查询地域以及可用区信息
			实例相关接口: 实例生命周期相关接口
			镜像相关接口: 镜像的创建, 修改, 删除, 导入, 同步...
			密钥相关接口: 密钥对创建, 修改, 绑定...等接口
			
		1.3.6 常用API接口
			地域相关接口:(接口名称/接口功能)
			- RunInstances			创建实例
			- StartInstance			启动实例
			- TerminateInstances	退还实例
			- DescribeInstances		查看实例列表
			
		1.3.7 SDK访问CVM基础
			- 获取访问凭证, 设置endpoint信息:
			  Credential cred = new Credential("SecretId", "SecretKey");	// 访问密钥
			  HttpProfile httpProfile = new HttpProfile();
			  httpProfile.setEndpoint("cvm.tencentcloudapi.com");			// 访问地址endpoint
			  ClientProfile clientProfile = new ClientProfile();
			  clientProfile.setHttpProfile(httpProfile);
			
			- 设置参数信息:
			  CvmClient client = new CvmClient(cred, "ap-guangzhou", clientProfile);
			  String params = "{\"InstanceIds\":[\"ins-46i20bt6\"]}";		// 实例参数
			  DescribeInstancesRequest req = DescribeInstancesRequest.fromJsonString(params, DescribeInstancesRequest.class);
	
		1.3.8 SDK新建CVM实例
			- 通过RunInsances接口创建实例
			  RunInstancesResponse resp = client.RunInstances(req);
			  DescribeInstancesRequest.toJsonStrng(resp);
			  
			- 创建成功后可以在Web控制台查看创建的CVM实例
		
		1.3.9 CVM最佳实践
			- 限制访问
			  · 通过使用防火墙(安全组)允许受信任的地址访问实例来限制访问, 在
			    安全组中配置最严格的规则. 例如, 限制端口访问, IP地址访问等.
			- 安全登录
			  · 尽量使用SSH密钥方式登录用户的Linux类型实例. 使用密码登录的实例
			    需要不定期修改密码.
			- 硬件存储
			  · 对于可靠性要求极高的数据, 请使用腾讯云云硬盘保证数据的持久存储
			    可靠性, 尽量不要选择本地盘.
				
	1.4 本地应用迁移上云流程
		迁移流程:
		1) 新建云虚拟机, 安装部署环境
		2) 云虚拟机中新建并初始化数据库
		3) 上传本地队形存储数据到云虚拟机
		4) 修改应用数据库和存储配置
		5) 打包并上传应用到云虚拟机
		6) 启动应用, 提供服务
		
Chapter2 使用云服务器特性
	2.1 负载均衡
		用户规模变大, 云服务器单机部署已经不能满足需求, 如何提高负载能力?
		- 集群部署: 多个云服务器实例部署同一个应用
		- 集群部署带来的问题:
		  · 统一用户访问入口
		  · 各个云服务器实例的流量分配
		  · 状态问题, 如Session
		
		负载均衡(Cloud Load Balancer, CLB)
		- 对多台云服务器进行流量分发的服务
		- 负载均衡可以通过流量分发拓展应用系统对外的服务能力, 通过消除
		  单点故障提高应用系统的可用性
		- 负载均衡服务会检查云服务器池中云服务器实例的健康状态, 自动隔
		  离异常状态的实例
		- 负载均衡服务具备自组管理, 自故障修复, 防网络攻击等高级功能,
		  适用于企业, 社区, 电子商务, 游戏等多种用户场景.
		2.1.1 负载均衡CLB简介
			- 多协议转发
			  · 四层负载均衡(包含TCP协议和UDP协议)
			  · 七层负载均衡(包含HTTP协议和HTTPS协议)
			- 流量分配算法
			  · 加权轮询算法
			  · 加权最小连接数算法
			  · 源地址散列调度算法
			- 跨可用区容灾
			  · 在同一个地域内采用多可用区部署
			
		2.1.2 负载均衡CLB分类
			- 负载均衡有两种实例类型:
			  · 负载均衡(此前亦被称为"应用型负载均衡")	
				# 支持TCP/UDP/HTTP/HTTPS协议, 提供基于域名和URL路径的均
				# 衡能力, 支持灵活转发
			  · 传统型负载均衡
				# 内网不支持HTTP/HTTPS协议, 配置方法简单
		
		2.1.3 负载均衡CLB使用步骤
			- 使用步骤:
			创建负载均衡实例-->配置负载均衡监听器-->配置转发规则-->配置健康检查-->配置会话保持-->绑定云服务器-->配置重定向(可选)
		
		2.1.4 负载均衡API概览
			- 负载均衡相关接口:
			  · CreateLoadBalancer	购买负载均衡实例
			  · CreateListener		创建负载均衡监听器
			  · CreateRule			创建负载均衡七层监听器转发规则
			  · RegisterTargets		绑定后端机器到监听器
		
		2.1.5 负载均衡最佳实践
			- 推荐使用负载均衡(原应用型负载均衡)
			- 负载均衡开启Gzip配置
			  · 开启Gzip功能对网页进行压缩, 可以有效降低网路传输的数据量, 提升访问速度
			- 负载均衡算法使用:
			  · 加权轮询算法: 无状态, 简洁和实用性
				# 用户可知每个请求所占用后端时间基本相同时, 如已知rs处理的都是同类型或者
				  相似类型的请求时.	  

			  · 加权最小连接数算法: 适合长时处理的请求服务, 如FTP等应用
				# 处理不同的请求, 且请求所占用后端时间相差较大, 如3ms和3s这种数量级的差距时.

			  · 源地址散列调度算法: IP_HASH可以实现部分会话保持的效果, 能够记住源IP
				# 适合负载均衡无Cookie功能的TCP协议, 不支持会话保持的场景进行会话保持.
			
	2.2 弹性伸缩
		使用集群+负载均衡后大大的提高了应用的负载能力, 但是业务访问有明显的高低谷, 如何灵活应对?
		- 传统人工手动的方式提前冗余部署机器
		  · 操作频繁, 配置繁琐, 易出错
		  · 资源闲置带来浪费
		  · 无法及时容错
		2.2.1 弹性伸缩(Auto Scaling, AS)
			可以根据您的业务需求和策略, 自动调整CVM计算资源, 确保您拥有适量的CVM实例来处理您的应
			用程序负载.
		
		2.2.2 弹性伸缩AS的优势
			+----------+--------------------------------+--------------------------------+
			| 优    势 |         使用弹性伸缩AS         |        不使用弹性伸缩AS        |
			+----------+--------------------------------+--------------------------------+
			|          |   自动伸缩实例, 无需人工干预   | 繁琐的手动操作手动创建, 销毁资 |
			|          | 弹性伸缩根据业务负载情况动态实 | 源, 需手动配置负载均衡;        |
			|          | 时自动创建和释放CVM实例, 帮助  | 手动操作容易出错, 影响业务.    |
			| 自 动 化 | 您以最合适的实例数量应对业务情 |                                |
			|		   | 况, 全程无需人工干预, 为您免去 |                                |
			|		   | 人工部署负担.                  |                                |
			+----------+--------------------------------+--------------------------------+
			|		   |     适量伸缩实例, 节省成本     |        资源闲置带来浪费        | 
			|		   | 弹性伸缩帮助您以最合适的实例数 | 需预留过量的CVM以防资源不足影响|
			|  		   | 量应对业务情况, 当业务需求增加 | 业务.                          |
			| 省 成 本 | 时为您无缝地自动增加适量CVM实  |                                |
			|          | 例, 当业务需求下降时, 为您自动 |                                |
			|          | 削减不需要的CVM实例, 提高设备  |                                |
			|		   | 利用率, 为您节省部罢和实例成本.|                                |
			+----------+--------------------------------+--------------------------------+
			|          |     系统自动检测, 及时容错     |          无法及时容错          |
			|          | 弹性伸缩自动检测实例的健康状况,| 通常在发现业务中断后才能处理异 |
			| 容 错 性 | 一旦发现异常, 即自动复制出健康 | 常实例, 影响业务可用性.        |
			|          | 的实例, 以替换状态异常的实例,  |                                |
			|          | 确保您的应用程序获得预期的计算 |                                |
			|          | 容量, 为您的业务保驾护航.      |                                |
			+----------+--------------------------------+--------------------------------+
		
		2.2.3 弹性伸缩AS使用步骤
			- 弹性伸缩AS使用步骤:
			  创建启动配置-->创建伸缩组-->创建伸缩策略
		
		2.2.4 弹性伸缩AS的API概览
			- CreateLaunchConfiguration			创建启动配置
			- CreateAutoScalingGroup			创建伸缩组
			- CreateScalingPolicy				创建告警触发策略
			- CreateScheduledAction				创建定时任务
			- CreateNotificationConfiguration	创建通知
			- CreateLifecycleHook				创建生命周期挂钩
		
		2.2.5 弹性伸缩AS最佳实践
			- 提前部署扩缩容
			  · 提前设置Auto Scaling定时测策略, 实时响应
			- 低成本应对业务浪潮
			  · 实时自动增加或减少CVM实例, 并自动完成负载均衡配置, 大量节约成本
			- 自动替换不健康CVM
			  · 定时对CVM进行健康检查, 自动替换异常实例, 保留操作记录
			
	2.3 存储扩容
		- 采用集群 + 负载均衡 + 弹性伸缩后相对可以灵活应对用户的访问需求, 但是随
		  着时间的推移, 用户量增大, 数据量也越来越大, 所以此时存储成为了瓶颈, 必
		  须增大存储容量
		  · 传统集中式数据存储局限性
			# 横向扩展差，交付周期长
			# 价格昂贵
			# 数据联通困难
			# 专人管理，维护成本居高不下
			# 手动扩容
		
		2.3.1 腾讯云存储产品概述
			存储产品: 云硬盘CBS 归档存储CAS 文件存储CFS
			存储网关: 存储网关CSG
			存储服务: 私有云存储CSP 云数据迁移CDM 日志服务CLS
		
		2.3.2 云硬盘产品概述
			云硬盘CBS是腾讯云提供的用于CVM实例的持久性数据块级存储.
			云硬盘中的数据自动地在可用区内以多副本几余方式存储避免数
			据的单点故障风险
			
			-----+---------------+---------------+---------------+-----
				 |				 |				 |				 |
			三种磁盘选择   弹性挂载/卸载	  弹性扩容		 快照备份
			
		2.3.3 云硬盘产品分类
			+--------------+----------------------------+------------------------------+------------------------------+
			|  云硬盘类型  |   普   通   云   硬   盘   |    高  性  能  云  硬  盘    |       S S D 云 硬 盘         |
			+--------------+----------------------------+------------------------------+------------------------------+
			| 描        述 | 适用于常规工作负载的低成本 | 适用于均衡核心工作负载的价格 | 适用于对低延迟敏感的核心交易 |
			|			   | HDD卷类型 				    | 和性能的混合介质卷类型       | 型工作负载的SSD卷            |
			+--------------+----------------------------+------------------------------+------------------------------+
			| 典 型  场 景 | 大数据, 数据仓库, 日志处理 | 业务逻辑处理, 低延迟应用程序 |  关系型数据库和NoSQL数据库   |
			+--------------+----------------------------+------------------------------+------------------------------+
			|  数据持久性  |         0.99999999         |          0.99999999          |          0.99999999          |
			+--------------+----------------------------+------------------------------+------------------------------+
			| 磁 盘  大 小 |          10GB-16TB         |           50GB-4TB           |          100GB-4TB           |
			+--------------+----------------------------+------------------------------+------------------------------+
			| 单盘最大IOPS |            1000            |             4500             |            24000             |
			+--------------+----------------------------+------------------------------+------------------------------+
			| 单盘最大吞吐 |          100MB/s           |           130MB/s            |           260MB/s            |
			+--------------+----------------------------+------------------------------+------------------------------+
			| 访 问  时 延 |          小于10ms          |           小于3ms            |           小于3ms            |
			+--------------+----------------------------+------------------------------+------------------------------+
		
		2.3.4 云硬盘扩容方式
			- 云硬盘扩容他扩容:
			  · 通过云硬盘控制台扩容
			  · 通过云服务器控制台扩容
			  · 通过API扩容
	
		2.3.5 云硬盘API概览
			- CreateDisks		创建云硬盘
			- AttachDisks		挂载云硬盘
			- ResizeDisks		扩容云硬盘
			- CreateSnapshot	创建快照
		
		2.3.6 云硬盘最佳实践
			- 多块弹性云硬盘构建RAID组
			  · RAID可以将多个磁盘组合起来构成一个磁盘列组, 提高数据的读写性能和可靠性
			- 多块弹性云硬盘构建LVM逻辑卷
			  · 例如, 您可以购买3块4TB的弹性云硬盘并使用LVM创建一个将近12TB的超大文件系统
		
		2.3.7 文件存储CFS
			腾讯云CFS提供可扩展的共享文件存储服务, 可与腾讯云服务器, 容器服务或者批量处理
			等服务搭配使用.
			- 集成管理
			- 自动扩展
			- 成本低廉
			- 安全可靠
		
		2.3.8 文件存储与云硬盘的区别
			+------------+------------------------------+--------------------+
			|    类别    |         文件存储CFS          |       云硬盘       |
			+------------+------------------------------+--------------------+
			| 吞吐量级别 | 单客户端100MB/s(上限1.2GB/s) |    上限600MB/s     |
			+------------+------------------------------+--------------------+
			| 共  享  性 |         多客户端共享         |       不支持       |
			+------------+------------------------------+--------------------+
			| 冗      余 |             3份              |        3份         |
			+------------+------------------------------+--------------------+
			| 使用  方式 |        挂载后直接使用        | 需自行安装文件系统 |
			+------------+------------------------------+--------------------+
		
		2.3.9 文件存储使用步骤
			创建文件系统-->获取挂载点信息-->挂载文件系统-->安装CFS服务监控插件
		
	2.4 本地应用上云后仍然存在的问题
		本地应用迁移上云后架构如下:

																					+=================================+
																					| 云服务器						  |
																					| +-------------+      +--------+ |
											+===== 伸缩组 =====+       +------------| | MySQL数据库 |----->| 数据库 | |
		                                    | CVM集群          |       |            | +-------------+      +--------+ |
		            统一入口, 提高负载能力  | +--------------+ |       |			+=================================+
		+------+        +----------+        | | 图书管理系统 | |       |
		| 用户 |------->| 负载均衡 |------->| +--------------+ |-------|
		+------+        +----------+        |  ... 缩容/扩容   |       |
											| +--------------+ |       |
											| | 图书管理系统 | |       |
											| +--------------+ |       | 保存图片   +----------+
											+==================+       +----------->| 文件存储 |
											弹性伸缩, 灵活应对访问高峰				+----------+		
											成本大大降低, 存储的动态扩容
											