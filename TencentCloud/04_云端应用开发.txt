Chapter1 云数据库MySQL (关系型数据库)
	1.1 数据库简介
		- 数据库通常可以按照数据组织方式和架构进行分类:
			数据组织方式{关系型数据库, 非关系型数据库};	(根据数据的类型进行区分)
			数据库架构{集中式数据库, 分布式数据库};		(根据数据存储和管理的网络架构区分)
			
			`` 关系型数据库: 关系型数据库指的是使用关系模型(二维表格模型)来组织数据的数据库. 
			
			`` 非关系型数据库: 非关系型数据库又被称为 NoSQL(Not Only SQL), 意为不仅仅是SQL. 
							   通常指数据以对象的形式存储在数据库中, 而对象之间的关系通过每
							   个对象自身的属性来决定, 常用于存储非结构化的数据.
							   
			`` 集中式数据库: 集中式数据库基本上是一种存储, 定位以及仅在单个位置维护的数据库.
							 此类数据库是从该位置本身修改和管理的. 因此, 该位置主要是任何数
							 据库系统或中央计算机系统. 可以通过Internet连接(LAN, WAN等)访问
							 集中位置. 该集中式数据库主要由机构或组织使用. 
							 # 个人理解: 所有的数据都集中在一个计算机中. 
							 
			`` 分布式数据库: 分布式数据库基本上是一种数据库, 它由多个相互连接并分布在不同物
							 理位置的数据库组成. 因此, 可以独立于其他物理位置来管理存储在各
							 个物理位置上的数据. 因此, 在不同物理位置的数据库之间的通信是由
							 计算机网络完成的. 
							 # 个人理解: 数据分布在多个计算机中, 通过网络连接, 组成一个数据库.							 
			
			· 类型:
			  # 集中式数据库: CDB CRS
			  # 分布式数据库: DCDB MangoDB HBase TiDB TData
			  # 传输服务: DTS
			  
			- 集中式数据库CDB
			  主要包括 {云数据库MySQL, 云数据库SQLServer, 云数据库TDSQL, 云数据库PostgreSQL};
			  CDB{关系型数据库云服务, 数据迁移, 高可用};
	
	1.2 云数据库MySQL
		CDB For MySQL{高性能, 容灾, 安全监控, 易用};
		1.2.1 云数据库MySQL
			- 相对自建数据库的优势:
			  · 轻松管理海量数据库
			  · 数据导入与备份回档
			  · 专业的监控与告警
			  · 多种接入方式
		
		1.2.2 云数据库MySQL应用场景
			- 电商场景
														+====================+      +====================+
														| CVM      			 |      | TencentDB			 |
														|	+------------+   |      |   +------------+	 |
													 +--+-->| 订单服务器 |   |      |   | 数 据 库 A |	 |
													 |	|	+------------+	 |      |   +------------+	 |
													 |	|					 |      |					 |
			+-------------+      +-------------+     |	|	+------------+   |      |   +------------+	 |
			| 负 载 均 衡 |----->| 接 入 服 务 |-----+--+-->| 支付服务器 |	 +--+-->|   | 数 据 库 B |	 |
			+-------------+      +-------------+     |	|	+------------+   |  |   |   +------------+	 |
													 |	|                    |  |   |					 |
													 |	|	+------------+   |  |   |   +------------+	 |
													 +--+-->| 运营服务器 |   |  |   |   | 数 据 库 C |   |
														|	+------------+   |  |   |   +------------+	 |
														|					 |  |   |					 |
														+====================+  |   +====================+
																				|
																				|	   +---------------+
																				+----->| 云数据库Redis |
																					   +---------------+
		1.2.3 使用云数据库MySQL替代自建MySQL
			- 云数据库MySQL替代自建MySQL
			  · 成本低, 性能优
			  · 数据备份, 加密, 更安全
			  · 购买既高费用, 高可靠
		
		1.2.4 云数据库MySQL使用
			登录腾讯云平台-->购买云数据库MySQL-->初始化数据库-->本地数据库数据迁移-->修改应用配置-->部署应用, 访问
		
	1.3 数据迁移
		- 数据库数据迁移常见问题:
		  · 遗留数据
		  · 服务停机
		  · 数据量大, 耗时长, 迁移过程中故障如何处理
		  · ...
		- 旧数据如何迁移到新的云数据MySQL中
		
		1.3.1 数据迁移到云数据库MySQL方案
			- 迁移本地数据到云数据库方案:
			- SQL文件导入: 数据量小(单文件不超过2G)
			- 在线迁移: DTS数据迁移工具迁移(实时不停服同步)
			- 离线迁移: 备份文件还原
		
		1.3.2 SQL文件导入
			进入对应数据库实例的管理界面-->选择要导入的SQL文件-->选择目标数据库-->确认数据导入-->完成数据导入, 访问数据库
		
		1.3.3 DTS数据迁移工具迁移
			可以使用DTS数据迁移工具进行数据库的迁移, 此处我们可以通过图形界面进行操作, 选择迁移方式等.
		
	1.4 读写分离
		在常见的互联网业务中, 数据库读写比例通常为4:1至10:1之间. 在这样的业务场景下, 数据库的读负载远高于写负载, 如何缓解
		数据库大量的读请求压力?
		
		1.4.1 读写分离
			读写分离简介:
			- 基本的原理是让主数据库处理事务性增, 改, 删操作(INSERT, UPDATE, DELETE), 而从数据库处理SELECT查询操作
			- 数据库复制被用来把事务性操作导致的变更 同步到集群中的从数据库
			
							   +-------------+			
							   | 云 服务器组 |
							   +------+------+
									  |
			数据库集群				  |
					写操作			  |		读操作
				  +-------------------+-------------------+
				  |					  |	读操作			  |
			+-----+-----+		+-----+-----+		+-----+-----+
			| 主 数据库 |		| 从 数据库 |		| 从 数据库 |
			+-----------+		+-----------+		+-----------+
		1.4.2 云数据库MySQL只读实例
			- 只读实例:
			  · 云数据库MySQL支持用户创建一个或多个只读实例, 以支持用户的读写分离和一主多从应用场景, 
			    可显著提高用户数据库的读负载能力
		
		1.4.3 只读实例使用步骤
			进入实例详情页面, 点击添加只读实例(自动跳转到只读实例列表页)
		
		1.4.4 读写分离实现步骤
			购买云数据库MySQL-->创建只读实例-->修改应用数据源配置-->修改代码支持读写分离-->重新编译, 部署应用-->验证效果
			
		1.4.5 应用云数据库MySQL后架构变化
														+=======伸缩组=======+      
														| CVM集群   		 |      
														|	+------------+   |    增删改+-------------+	 
													 +--+-->| 图书管理OS |   |    +---->| 数据库MySQl |	 
													 |	|	+------------+	 |    |     +-------------+	 
													 |	|					 |    |   		   ↓数据同步
			+-------------+      +-------------+     |	|	+------------+   |    |查询 +-------------+	 
			|  伸 缩 组   |----->| 负 载 均 衡 |-----+--+-->| 图书管理OS |	 +----+---->| 只 读 实 例 |	 
			+-------------+      +-------------+     |	|	+------------+   |    |     +-------------+	 
													 |	|    缩容↑  ↓扩容    |    |  					 
													 |	|	+------------+   |    |保存 +-------------+	 
													 +--+-->| 图书管理OS |   |    +---->| 文 件 存 储 |   
														|	+------------+   |          +-------------+	 
														|					 | 		 
														+====================+
			
Chapter2 云数据库MangoDB (非关系型数据库)
	2.1 云数据库MangoDB简介
		- 关系型数据库瓶颈:
		  · 高并发读写需求
		  · 海量数据的高效率读写
		  · 高扩展性和可用性
		  · 互联网时代，关系型数据库的很多特性不再需要了
			# 事务强一致性
			# 读写强实时性
			# 多表关联查询弱化
		- 腾讯云数据库MongoDB(TencentDB for MongoDB)
		  · 基于开源NoSQL数据库MongoDB专业打造的高性能, 分布式数据存储服务, 完全兼容MongoDB协议, 
			适用于面向非关系型数据库的场景
			
			2.1.1 MongoDB与MySQL区别:
				+----------+------------------------+------------------------+
				|          |        MangoDB         |         MySQL          |
				+----------+------------------------+------------------------+
				| 类    型 |      NoSQL数据库       |      关系型数据库      |
				+----------+------------------------+------------------------+
				| 存储方式 |        文档存储        |         行存储         |
				+----------+------------------------+------------------------+
				| 数 据 量 |    支持海量数据存储    |单表数据过大性能大幅下降|
				+----------+------------------------+------------------------+
				| 事务支持 |         不支持         |          支持          |
				+----------+------------------------+------------------------+
				| 应用场景 | 表结构不明确, 经常变化 | 结构化查询, 事务, 一致 |
				|          | 海量数据(如评论)...    | 性要求, 关联查询(join) |
				+----------+------------------------+------------------------+
				
			2.1.2 应用场景
				- 游戏开发
				  · 版本迭代快
				  · 修改数据库表结构, 版本迭代周期长
				- 移动行业
				  · 云数据库MongoDB支持二维空间索引, 可以方便地查询地理位置关系和检索用户地理位置数据.
				  · 可实现基于地理位置系统的地图应用和实现附近的人, 地点等功能.
				  · 也可使用MongoDB存储用户信息, 以及用户发表的朋友圈等信息.
				  
	2.2 云数据库MangoDB使用
		操作步骤:
		- 进入云数据库MangoDB主页-->创建实例-->初始化实例-->应用添加依赖, 配置文件-->编写代码, 操作MangoDB实例-->验证效果
		2.2.1 具体操作
		2.2.2 数据迁移
			- 云数据库MangoDB目前支持两类迁移:
			  · 云服务器CVM自建实例迁移
			  · 外网实例迁移
			- 通过数据传输服务(DTS)快速进行数据迁移
		
		2.2.3 使用实例
			- 云数据库MongoDB提供多种语言连接方式
			  · 如Shell, PHP, Node.js, Java, Python
			  · 各语言都有对应的demo, 快速入门
			  · 官网地址: https://cloud.tencent.com/document/product/240/3563
			- 随时调整实例配置, 升级
			- 支持创建一个或者多个只读实例
			
		2.2.4 应用云数据库MangoDB后架构变化
		
														+=======伸缩组=======+      
														| CVM集群   		 |      
														|	+------------+   |    增删改+-------------+	 
													 +--+-->| 图书管理OS |   |    +---->| 数据库MySQl |	 
													 |	|	+------------+	 |    |     +-------------+	 
													 |	|					 |    |   		   ↓数据同步	 
			+-------------+      +-------------+     |	|	+------------+   |    |查询 +-------------+	 
			|  伸 缩 组   |----->| 负 载 均 衡 |-----+--+-->| 图书管理OS |	 +----+---->| 只 读 实 例 |	 
			+-------------+      +-------------+     |	|	+------------+   |    |     +-------------+	 
													 |	|    缩容↑  ↓扩容    |    |  					 
													 |	|	+------------+   |    |保存 +-------------+	 
													 +--+-->| 图书管理OS |   |    +---->| 文 件 存 储 |   
														|	+------------+   |    |     +-------------+	 
														|					 | 	  | 
														+====================+    |保存日志   +-----------------+  便捷易用, 数据安全, 全面监控
																				  +---------->| 云数据库MangoDB |  文档存储, 模式自由(无需预先定义结构)
																							  +-----------------+  大数据量, 高性能
																			
Chapter3 对象存储
	3.1 对象存储COS简介
		- 文件存储CFS存在的问题
		  · 直接挂载主机, 适合文件共享, 但是没有直观的web管理界面
		  · 存储能共享, 但是文件访问权限难控制, 需在后台服务中控制
		  · 只是作为存储, 无法直接通过HTTP方式访问, 需要其它服务支持
		  · 无CDN节点加速
		  · ...
		  
		3.1.1 对象存储COS简介
			- 对象存储(Cloud Object Storage, COS)是腾讯云提供的一种存储海量文件的分布式存储
			  服务, 用户可通过网络随时存储和查看数据.
			  · 应用场景:
				# 多点上传的UGC场景
				# 频繁IO的网盘场景
				# 海量数据归档及备份
				# 热点资源分发下载等
				
			- 块存储(CBS)
			  · 侧重高性能IO
			  · 一般不共享
			  · 直接挂载主机
			- 文件存储(CFS)
			  · 侧重文件共享
			  · 性能有限
			  · 不适用于大规模数据
			  · 通过NFS/CIFS共享
			- 对象存储(COS)
			  · 兼具性能与共享
			  · 分布式, 大规模
			  · 适用于大数据场景
			  · 具备Http等接口
		3.1.2 对象存储COS类型
			- 按照访问频度的高低, COS提供三种对象的存储级别
			  · 标准存储(默认)
			  · 低频存储
			  · 归档存储
		
		3.1.3 存储类型对比
			+--------------+--------------+--------------+--------------+
			|			   | 标 准  存 储 | 低 频  存 储 | 归 档  存 储 |
			+--------------+--------------+--------------+--------------+
			| 响        应 |   毫 秒 级   |   毫 秒 级   |需提前申请恢复|
			+--------------+--------------+--------------+--------------+
			| 最短计费时间 |      --      |     30天     |     90天     |
			+--------------+--------------+--------------+--------------+
			| 支 持  地 域 | 全 部  地 域 | 全 部  地 域 |  仅中国大陆  |
			+--------------+--------------+--------------+--------------+
			| 存 储  费 用 | 标        准 | 较        低 | 较        低 |
			+--------------+--------------+--------------+--------------+
			| 数据取回费用 |      --      | 较        低 | 较        高 |
			+--------------+--------------+--------------+--------------+
			| 读写请求费用 | 极        低 | 较        低 | 极低(需恢复) |
			+--------------+--------------+--------------+--------------+

		3.1.4 对象存储各概念关系
											 +==================================+
											 |									|
											 |					+-------+		|
											 |					| 地 域 |		|
			+-------+ SDK, API, Web控制台... | +----------+		+-------+		|
			| 对 象 |----------------------->| | 存 储 桶 |						|
			+-------+						 | +----------+		+-------+		|
											 |					| 权 限 |		|
											 |					+-------+		|
											 |									|
											 |					+-------------+ |
											 |					| 监 控 告 警 | |
											 |					+-------------+ |
											 |									|
											 |					+-------------+ |
											 |					| C D N 加 速 | |
											 |					+-------------+ |
											 |									|
											 +==================================+
											 
	3.2 控制台使用步骤
		- 控制台快速使用步骤:
		注册, 登录-->创建存储桶-->上传对象-->下载对象-->删除对象-->删除存储桶
		3.2.1 创建存储桶
		3.2.2 工具概览
			操作COS对象存储的工具:
			- COSCMD工具: 本工具支持用户使用简单的命令行指令实现对对象的批量上传, 下载, 删除等操作.
			- COS Browser工具: 本工具支持用户通过可视化界面, 方便地进行数据的上传, 下载等操作.
			- COS Migration工具: 本工具支持用户从本地, 其他云存储等多种源数据地址迁移至COS.
			- FTP Server工具: 本工具支持用户使用FTP客户端从COS上传, 下载文件.
			- COSFS 工具: 在Linux系统中, 使用本工具可以把存储桶挂载到本地文件系统中, 通过本地文件系统操作COS上的对象.
			- Hadoop工具: 本工具支持用户使用Hadoop处理存储在COS上的对象, 如MapReduceHive等.
			- HDFS TO COS工具: 本工具用于将HDFS上的数据拷贝到COS上.
			- 在线辅助工具: 本类工具是COS为用户提供的Web端辅助工具, 包括有COS签名工具COS 请求工具.

	3.3 对象存储API
		- 由于使用了不同的数据传输框架, 对象存储COS提供了独立于云API的接口和独立的SDK
		  · 腾讯云对象存储COS使用XML API, 这是一种轻量级的, 无连接状态的接口, 
			调用此接口您可以直接通过HTTP/HTTPS发出请求和接受响应, 实现与腾讯云
			对象存储后台的交互操作.
			
		3.3.1 术语简介
			- APPID: 开发者访问COS服务时拥有的用户维度唯一资源标识, 用以标识资源.
			- Secretld: 开发者拥有的项目身份识别ID, 用以身份认证.
			- SecretKey: 开发者拥有的项目身份密钥.
			- Bucket: COS中用于存储数据的容器.
			- Object: COS中存储的具体文件, 是存储的基本实体.
			- Region: 域名中的地域信息. 枚举值参见可用地域文档, 如:ap-beijing, ap-hongkongeu-frankfurt等.
			- ACL: 访问控制列表(Access Control List), 是指特定Bucket或Object的访问控制信息列表.
			- CORS: 跨域资源共享(Cross-Origin Resource Sharing), 指发起请求的资源所在域不同于该请求所指向资源所在的域的HTTP请求.
			- Multipart Uploads: 分块上传, 腾讯云COS服务为上传文件提供的一种分块上传模式.
		
		3.3.2 Service接口
			- Get Service
			  · 获取存储桶列表，获取指定账号下所有 Bucket List
			  · 请求示例如下
				######################################
				#	GET/HTTP/1.1					 #
				#	Host: service.cos.myqcloud.com	 #
				#	Date: GMT Date					 #
				#	Authorization: Auth String		 #
				######################################

			  · 请求参数示例
				GET https://service.cos.myqcloud.com/
				Host: service.cos.myqcloud.com
				Authorization: g-sign-algorithm=sha1&q-ak=AKIDaOxJQ6eopMhofHgs89xWqujlyOYTrett&q-sign-time=156229309
							   8;1562300298&g-key-time=1562293098;1562300298&qheader-list=host&g-url-param-list=&q-s
							   ignature=c528db73549d905eb1275114f1ce1f6b7adc289c

			  · 返回结果示例
				<ListAl1MyBucketsResult>
					<owner>
						<ID>qcs::cam::uin/100003049329;uin/100003049329</ID>
						<DisplayName>100003049329</DisplayName>
					</owner>
					<Buckets>
						<Bucket>
							<Name>book-pic-1255596198</Name>
							<Location>ap-guangzhou</Location>
							<CreationDate>2019-07-02T07:47:242</CreationDate>
						</Bucket>
						<Bucket>
							<Name>smart-1255596198</Name>
							<Location>ap-guangzhou</Location>
							<CreationDate>2019-06-04T09:35:382</CreationDate>
						</Bucket>
						<Bucket>
							<Name>tbook-1255596198</Name>
							<Location>ap-guangzhou</Location><CreationDate>2019-04-16T11:11:512</CreationDate>
						</Bucket>
					</Buckets>
				</ListA11MyBucketsResult>
		3.3.3 Bucket接口
			Bucket基本操作接口
			- PUT Bucket: 创建存储桶
			- GET Bucket: 查询对象列表
			- HEAD Bucket: 检索存储桶极其权限
			- DELETE Bucket: 删除存储桶
		
		3.3.4 Object接口
			Object接口基本操作接口:
			- PUT Object: 简单上传对象
			- PUT Object-Copy: 设置对象复制
			- POST Object: 表单上传对象
			- GET Object: 下载对象
			- HEAD Object: 查询对象元数据
			- DELETE Object: 删除单个对象
			- DELETE Multiple Objects: 删除多个对象
			
	3.4 SDK操作对象存储
		- 腾讯云对象存储COS除了提供多种API接口, 还提供了丰富多样的SDK供开发者使用, 
		  文档齐全:
		  · Java SDK
		  · Android SDK
		  · iOs SDK
		  · JavaScript SDK
		  · Python SDK
		  · 小程序SDK
		  · ...
		  
		3.4.1 Java SDK访问
			使用步骤:
			添加依赖-->初始化密钥信息-->初始化COSClient-->上传文件-->下载文件-->关闭客户端
		
		3.4.2 引入COS存储后架构变化
			- 文件存储被COS替代
														+=======伸缩组=======+      
														| CVM集群   		 |      
														|	+------------+   |    增删改+-------------+	 
													 +--+-->| 图书管理OS |   |    +---->| 数据库MySQl |	 
													 |	|	+------------+	 |    |     +-------------+	 
													 |	|					 |    |   		   ↓数据同步
			+-------------+      +-------------+     |	|	+------------+   |    |查询 +-------------+	 
			|  伸 缩 组   |----->| 负 载 均 衡 |-----+--+-->| 图书管理OS |	 +----+---->| 只 读 实 例 |	 
			+-------------+      +-------------+     |	|	+------------+   |    |     +-------------+	 
													 |	|    缩容↑  ↓扩容    |    |  					 
													 |	|	+------------+   |    |保存图片 +-------------+	 		1. 可以直接通过Http访问 
													 +--+-->| 图书管理OS |   |    +-------->| 文 件 存 储 |<--------2. 方便控制访问权限
														|	+------------+   |    |         +-------------+	 		3. 海量文件存储同时支持CDN加速
														|					 | 	  | 								4. 工具多样化
														+====================+	  |保存日志	+-----------------+		5. ...
																				  +-------->| 云数据库MangoDB |
																							+-----------------+

			
			